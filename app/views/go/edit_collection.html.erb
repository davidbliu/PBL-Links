<style type = 'text/css'>
#data-input{
	min-height:500px;
	min-width:400px;
	border:none;
}
#example-textarea{
  padding:15px;
  min-height:500px;
  min-width:400px;
  border:none;
  background-color:inherit;
}
#loading-gif{
  height:150px;
  position:fixed;
  left:500px;
  top:175px;
  display:none;
  z-index:5000;
}
</style>
<img src = 'https://cdn.wpfaster.org/wp-content/uploads/2013/06/loading-gif.gif' id = 'loading-gif'></img>

<h3>Editing <a href = '/go/collections/<%= @name %>'><%= @name %></a></h3>
<div class = 'col-md-6'>
<div>
	<textarea id = 'data-input' class = 'input-sm'>
	<%= @data %>
	</textarea>
</div>
<div>
	<button id = 'save-btn' class = 'btn btn-material-blue-500'>Update Collection</button>
</div>
</div>


<div class = 'col-md-6'>
	Use YAML format to update your collections. Here are guidelines for how to create a collection
  <ol>
    <li>Every collection must have a name. type "name: {{your name}}" with no spaces before name</li>
    <li>Descriptions are highly recommended. type "description: {{your description}}" with no spaces before description and no line breaks or tabs in the description</li>
    <li>Every collection must have a links section. type "links: " with no spaces before links
      <ol>
        <li>The links section is a bit trickier. A collection is a bunch of groups of links</li>
        <li>under the links section, you need to type "- group_name:" (no spaces before dash, one space after dash)</li>
        <li>then, you can place links in that group by writing "  - pbl.link/link_name" (two spaces before dash, one space after dash)</li>
      </ol>
    </li>
    <li>Click "Update Collection" button to save your collection. If you change the name of the collection, you will end up creating a different collection</li>
  </ol>
  <div>
    <h4>Example Configuration</h4>
    <p class = 'text-muted' style = 'font-size:10px'>You can copy and paste this into the editing area to get started</p>
    <textarea id = 'example-textarea' readonly><%= ParseGoLinkCollection.example_data %></textarea>
  </div>
  <!-- end of example div -->
</div>


<script type = 'text/javascript'>
function showSpinner(){
	$('#loading-gif').show();
}
function hideSpinner(){
	$('#loading-gif').hide();
}
$('#save-btn').click(function(){
	new_text = $('#data-input').val().trim();
	showSpinner();
	$.ajax({
      url: '/go/collections/<%= @name %>/update',
      type: 'POST',
      data: {'data': new_text},
      success:function(data){
        window.location.reload();
      },
      error:function (xhr, textStatus, thrownError){
      	hideSpinner();
        alert('Failed to update; your input data may not match our formatting guidelines');
      }
  });
});
</script>
